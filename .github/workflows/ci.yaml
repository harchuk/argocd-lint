name: CI

on:
  push:
    branches: [ main ]
  pull_request: {}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Verify gofmt
        run: |
          fmt_files=$(gofmt -l $(find . -name '*.go' -not -path './vendor/*'))
          if [ -n "$fmt_files" ]; then
            echo "The following files need gofmt:" >&2
            echo "$fmt_files" >&2
            exit 1
          fi

      - name: Tidy
        run: go mod tidy

      - name: Ensure module files clean
        run: git diff --exit-code go.mod go.sum

      - name: Build
        run: go build ./...

      - name: Test
        run: go test ./...

      - name: Lint sample manifests
        run: |
          go build -o ./bin/argocd-lint ./cmd/argocd-lint
          ./bin/argocd-lint examples/apps/app-good.yaml --format table
          ./bin/argocd-lint examples/appsets --appsets --format table

      - name: Ensure failing manifest triggers error
        run: |
          set +e
          ./bin/argocd-lint examples/apps/app-bad.yaml --format table
          status=$?
          if [ "$status" -eq 0 ]; then
            echo "Expected lint failure for app-bad.yaml"
            exit 1
          fi
          if [ "$status" -ne 1 ]; then
            echo "Unexpected exit code $status for failing manifest"
            exit $status
          fi
